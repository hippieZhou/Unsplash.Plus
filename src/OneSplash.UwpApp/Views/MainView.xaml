<UserControl
    x:Class="OneSplash.UwpApp.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:common="using:OneSplash.UwpApp.Common"
    xmlns:controls="using:OneSplash.UwpApp.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dto="using:OneSplash.Application.DTOs"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:OneSplash.UwpApp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkits="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
    d:DesignHeight="1080"
    d:DesignWidth="1920"
    mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate x:Key="SplashItemTemplate" x:DataType="dto:SplashPhotoDto">
            <Grid
                x:Name="connectedElement"
                common:ImageLoader.Source="{x:Bind}"
                DataContext="{x:Bind}">
                <Grid.Background>
                    <AcrylicBrush
                        BackgroundSource="Backdrop"
                        FallbackColor="{x:Bind Color}"
                        TintColor="{x:Bind Color}"
                        TintOpacity="0.4" />
                </Grid.Background>
                <toolkits:ImageEx
                    x:Name="HeroImage"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    x:DeferLoadStrategy="Lazy"
                    EnableLazyLoading="True"
                    IsCacheEnabled="True"
                    Stretch="UniformToFill" />
                <Image x:Name="HeroImageMirror" Stretch="UniformToFill" />
                <TextBlock
                    x:Name="itemName"
                    Margin="12,0,0,12"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    extensions:VisualExtensions.CenterPoint="50,50,0"
                    FontFamily="{StaticResource MontserratBold}"
                    Opacity="0.8"
                    Style="{StaticResource BodyTextBlockStyle}"
                    Text="{x:Bind ImageAuthor}"
                    TextWrapping="NoWrap"
                    Visibility="Collapsed">
                    <animations:Implicit.ShowAnimations>
                        <animations:OpacityAnimation
                            From="0"
                            To="1.0"
                            Duration="0:0:0.600" />
                    </animations:Implicit.ShowAnimations>
                    <animations:Implicit.HideAnimations>
                        <animations:OpacityAnimation
                            From="1.0"
                            To="0"
                            Duration="0:0:0.600" />
                    </animations:Implicit.HideAnimations>
                </TextBlock>
                <Button
                    x:Name="itemDownload"
                    Width="40"
                    Height="40"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Click="OnItemDownload"
                    CornerRadius="0"
                    Style="{StaticResource ButtonRevealStyle}">
                    <ContentControl Width="20" Style="{StaticResource Style-Icon-Download}" />
                </Button>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="PointerEntered">
                        <core:ChangePropertyAction
                            PropertyName="Visibility"
                            TargetObject="{Binding ElementName=itemName}"
                            Value="Visible" />
                        <core:ChangePropertyAction PropertyName="Background" TargetObject="{Binding ElementName=connectedElement}">
                            <core:ChangePropertyAction.Value>
                                <AcrylicBrush
                                    BackgroundSource="Backdrop"
                                    FallbackColor="{x:Bind Color}"
                                    TintColor="{x:Bind Color}"
                                    TintOpacity="0.8" />
                            </core:ChangePropertyAction.Value>
                        </core:ChangePropertyAction>
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="PointerExited">
                        <core:ChangePropertyAction
                            PropertyName="Visibility"
                            TargetObject="{Binding ElementName=itemName}"
                            Value="Collapsed" />
                        <core:ChangePropertyAction PropertyName="Background" TargetObject="{Binding ElementName=connectedElement}">
                            <core:ChangePropertyAction.Value>
                                <AcrylicBrush
                                    BackgroundSource="Backdrop"
                                    FallbackColor="{x:Bind Color}"
                                    TintColor="{x:Bind Color}"
                                    TintOpacity="0.4" />
                            </core:ChangePropertyAction.Value>
                        </core:ChangePropertyAction>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SplashCategoryTemplate" x:DataType="dto:CategoryDto">
            <Grid
                Width="100"
                Height="100"
                Background="{x:Bind Name}"
                CornerRadius="50" />
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <controls:SplashGridView
            x:Name="SplashGridView"
            BackToTopCommand="{x:Bind BackToTopCommand}"
            DesiredWidth="360"
            ItemHeight="240"
            ItemLoading="{x:Bind ViewModel.SplashPhotos.IsLoading, Mode=OneWay}"
            ItemMargin="18,36,18,0"
            ItemSelectedCommand="{x:Bind ItemClickCommand}"
            ItemTemplate="{StaticResource SplashItemTemplate}"
            ItemsSource="{x:Bind ViewModel.SplashPhotos, Mode=OneWay}"
            LoadCommand="{x:Bind ViewModel.LoadCommand}">
            <controls:SplashGridView.Header>
                <controls:SplashGridViewHeader
                    Height="320"
                    DownloadCommand="{x:Bind DownloadCommand}"
                    ItemTemplate="{StaticResource SplashCategoryTemplate}"
                    ItemsSource="{x:Bind ViewModel.SplashCategories, Mode=OneWay}"
                    MoreCommand="{x:Bind MoreCommand}" />
            </controls:SplashGridView.Header>
            <controls:SplashGridView.Footer>
                <controls:SplashGridViewFooter
                    Margin="0,12,0,32"
                    IsError="{x:Bind ViewModel.IsError, Mode=OneWay}"
                    IsLoading="{x:Bind ViewModel.SplashPhotos.IsLoading, Mode=OneWay}" />
            </controls:SplashGridView.Footer>
        </controls:SplashGridView>

        <controls:SplashOverlayPopup
            x:Name="OverlayPopup"
            x:DeferLoadStrategy="Lazy"
            TappedCommand="{x:Bind TappedCommand}"
            Visibility="Collapsed" />

        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:NetworkConnectionStateTrigger ConnectionState="Disconnected" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplashGridView.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:NetworkConnectionStateTrigger ConnectionState="Connected" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplashGridView.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>-->
    </Grid>
</UserControl>