<UserControl
    x:Class="OneSplash.UwpApp.Controls.StepThroughListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:OneSplash.UwpApp.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="root"
    d:DesignHeight="64"
    d:DesignWidth="400"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style
            x:Key="Style-Icon-ArrowLeft"
            BasedOn="{StaticResource Style-Icon-Base}"
            TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <Path
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Data="M15 4.99994H1M1 4.99994L4.58783 8.58777M1 4.99994L4.58783 1.41211"
                            Stretch="Uniform"
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="Round"
                            StrokeLineJoin="Round"
                            StrokeStartLineCap="Round"
                            StrokeThickness="2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="Style-Icon-ArrowRight"
            BasedOn="{StaticResource Style-Icon-Base}"
            TargetType="ContentControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <Path
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Data="M15 4.99994H1M1 4.99994L4.58783 8.58777M1 4.99994L4.58783 1.41211"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Uniform"
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="Round"
                            StrokeLineJoin="Round"
                            StrokeStartLineCap="Round"
                            StrokeThickness="2">
                            <Path.RenderTransform>
                                <CompositeTransform Rotation="180" />
                            </Path.RenderTransform>
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DefaultListViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="12,0,12,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
            <Setter Property="AllowDrop" Value="False" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter
                            x:Name="Root"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            CheckBoxBrush="{x:Null}"
                            CheckBrush="{x:Null}"
                            CheckMode="{ThemeResource ListViewItemCheckMode}"
                            ContentMargin="{TemplateBinding Padding}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Control.IsTemplateFocusTarget="True"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            DragBackground="{ThemeResource ListViewItemDragBackground}"
                            DragForeground="{ThemeResource ListViewItemDragForeground}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            FocusBorderBrush="{x:Null}"
                            FocusSecondaryBorderBrush="{x:Null}"
                            FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                            PlaceholderBackground="{x:Null}"
                            PointerOverBackground="{x:Null}"
                            PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                            PressedBackground="{x:Null}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                            RevealBackground="{x:Null}"
                            RevealBorderBrush="{x:Null}"
                            RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                            SelectedBackground="{x:Null}"
                            SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                            SelectedPointerOverBackground="{x:Null}"
                            SelectedPressedBackground="{x:Null}"
                            SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}">
                            <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Selected" />
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Width="{Binding Width, ElementName=root}" Height="{Binding Height, ElementName=root}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ListView
            x:Name="ListView"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            HorizontalAlignment="Stretch"
            ItemTemplate="{Binding ItemTemplate, ElementName=root}"
            ItemsSource="{Binding ItemsSource, ElementName=root}"
            Loaded="ListView_Loaded"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
            ScrollViewer.HorizontalScrollMode="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Hidden"
            ScrollViewer.VerticalScrollMode="Disabled"
            SelectionChanged="ListView_SelectionChanged"
            SingleSelectionFollowsFocus="True"
            SizeChanged="ListView_SizeChanged"
            Unloaded="ListView_Unloaded">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <EntranceThemeTransition FromVerticalOffset="240" IsStaggeringEnabled="True" />
                </TransitionCollection>
            </ListView.ItemContainerTransitions>
            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource DefaultListViewItemContainerStyle}" TargetType="ListViewItem">
                    <Setter Property="Margin" Value="6" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <Grid
            Grid.Column="0"
            Width="52"
            Background="Transparent">
            <Button
                x:Name="ArrowLeft"
                Grid.Column="0"
                Width="52"
                Height="52"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Click="ArrowLeft_Click"
                Style="{StaticResource Style-Button-Icon-Circle}"
                Visibility="Collapsed">
                <ContentControl
                    Width="18"
                    Foreground="Black"
                    Style="{StaticResource Style-Icon-ArrowLeft}" />
            </Button>
            <interactivity:Interaction.Behaviors>
                <!--  鼠标相关操作  -->
                <core:EventTriggerBehavior EventName="PointerEntered">
                    <core:ChangePropertyAction
                        PropertyName="Visibility"
                        TargetObject="{Binding ElementName=ArrowLeft}"
                        Value="Visible" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="PointerExited">
                    <core:ChangePropertyAction
                        PropertyName="Visibility"
                        TargetObject="{Binding ElementName=ArrowLeft}"
                        Value="Collapsed" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </Grid>
        <Grid
            Grid.Column="2"
            Width="52"
            Background="Transparent">
            <Button
                x:Name="ArrowRight"
                Width="52"
                Height="52"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Click="ArrowRight_Click"
                Style="{StaticResource Style-Button-Icon-Circle}"
                Visibility="Collapsed">
                <ContentControl
                    Width="18"
                    Foreground="Black"
                    Style="{StaticResource Style-Icon-ArrowRight}" />
            </Button>
            <interactivity:Interaction.Behaviors>
                <!--  鼠标相关操作  -->
                <core:EventTriggerBehavior EventName="PointerEntered">
                    <core:ChangePropertyAction
                        PropertyName="Visibility"
                        TargetObject="{Binding ElementName=ArrowRight}"
                        Value="Visible" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="PointerExited">
                    <core:ChangePropertyAction
                        PropertyName="Visibility"
                        TargetObject="{Binding ElementName=ArrowRight}"
                        Value="Collapsed" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LeftButtonState">
                <VisualState x:Name="LeftButtonDisabled">
                    <VisualState.Setters>
                        <Setter Target="ArrowLeft.IsEnabled" Value="false" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="LeftButtonEnabled">
                    <VisualState.Setters>
                        <Setter Target="ArrowLeft.IsEnabled" Value="true" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="RightButtonState">
                <VisualState x:Name="RightButtonDisabled">
                    <VisualState.Setters>
                        <Setter Target="ArrowRight.IsEnabled" Value="false" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="RightButtonEnabled">
                    <VisualState.Setters>
                        <Setter Target="ArrowRight.IsEnabled" Value="true" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
