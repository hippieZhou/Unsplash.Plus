<UserControl
    x:Class="OneSplash.UwpApp.Controls.OverlayPopup"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:OneSplash.UwpApp.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkits="using:Microsoft.Toolkit.Uwp.UI.Controls"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <Grid x:Name="rootGrid" Tapped="Grid_Tapped">
        <Grid.Background>
            <SolidColorBrush Opacity="0.8" Color="{ThemeResource SystemChromeAltHighColor}" />
        </Grid.Background>
        <Grid x:Name="destinationElement" x:FieldModifier="public">
            <Grid.Background>
                <AcrylicBrush
                    BackgroundSource="Backdrop"
                    FallbackColor="{x:Bind SelectedItem.Color, Mode=OneWay}"
                    TintColor="{x:Bind SelectedItem.Color, Mode=OneWay}"
                    TintOpacity="1" />
            </Grid.Background>
            <toolkits:ImageEx
                x:Name="HeroImage"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                EnableLazyLoading="True"
                IsCacheEnabled="True"
                PlaceholderSource="{x:Bind SelectedItem.BlurhashSource, Converter={StaticResource TaskResultConverter}, Mode=OneWay}"
                Source="{x:Bind SelectedItem.ImageSource, Converter={StaticResource TaskResultConverter}, Mode=OneWay}"
                Stretch="UniformToFill" />
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!--  VisualState to be triggered when window width is >0 effective pixels.  -->
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="destinationElement.Width" Value="480" />
                        <Setter Target="destinationElement.Height" Value="320" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!--  VisualState to be triggered when window width is >960 effective pixels.  -->
                        <AdaptiveTrigger MinWindowWidth="961" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="destinationElement.Width" Value="800" />
                        <Setter Target="destinationElement.Height" Value="520" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <!--  VisualState to be triggered when window width is >=1440 effective pixels.  -->
                        <AdaptiveTrigger MinWindowWidth="1440" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="destinationElement.Width" Value="1200" />
                        <Setter Target="destinationElement.Height" Value="720" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
